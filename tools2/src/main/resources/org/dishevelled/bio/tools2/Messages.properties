// usage formatting

usage.commandListHeading = %nCOMMANDS%n
usage.descriptionHeading = %n
usage.optionListHeading = %nOPTIONS%n
usage.parameterListHeading = %nPARAMETERS%n
usage.synopsisHeading = USAGE%n  

dsh-bio.help.usage.header = Display help information about the specified command.
dsh-bio.usage.descriptionHeading =
dsh-bio.usage.parameterListHeading =

// input file parameters

<inputBedFiles>[0..*] = Input @|fg(green) BED|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputFastaFiles>[0..*] = Input @|fg(green) FASTA|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputFastqFiles>[0..*] = Input @|fg(green) FASTQ|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputGafFiles>[0..*] = Input @|fg(green) GAF|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputGfa1Files>[0..*] = Input @|fg(green) GFA 1.0|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputGfa2Files>[0..*] = Input @|fg(green) GFA 2.0|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputGff3Files>[0..*] = Input @|fg(green) GFF3|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputInterleavedFastqFiles>[0..*] = Input @|fg(green) interleaved FASTQ|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputPafFiles>[0..*] = Input @|fg(green) PAF|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputRgfaFiles>[0..*] = Input @|fg(green) rGFA|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputSamFiles>[0..*] = Input @|fg(green) SAM|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputTextFiles>[0..*] = Input tab-separated values (TSV) @|fg(green) text|@ file(s), if any. Compressed files and streams are supported. Default stdin.
<inputVcfFiles>[0..*] = Input @|fg(green) VCF|@ file(s), if any. Compressed files and streams are supported. Default stdin.

// input file options

input-first-fastq-file = First input @|fg(green) FASTQ|@ file. Compressed files are supported.
input-paired-file = Input paired @|fg(green) interleaved FASTQ|@ file. Compressed files are supported.
input-second-fastq-file = Second input @|fg(green) FASTQ|@ file. Compressed files are supported.
input-unpaired-file = Input unpaired @|fg(green) FASTQ|@ file. Compressed files are supported.

// output file options

output-bam-file = Output unaligned @|fg(green) BAM|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-bed-file = Output @|fg(green) BED|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-description-file = Output @|fg(green) text|@ file of description lines, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-edge-file = Output edges.txt format @|fg(green) text|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-fasta-file = Output @|fg(green) FASTA|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-fastq-file = Output @|fg(green) FASTQ|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-gaf-file = Output @|fg(green) GAF|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-gfa1-file = Output @|fg(green) GFA 1.0|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-gfa2-file = Output @|fg(green) GFA 2.0|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-gff3-file = Output @|fg(green) GFF3|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-interleaved-fastq-file = Output @|fg(green) FASTQ|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-node-file = Output nodes.txt format @|fg(green) text|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-paf-file = Output @|fg(green) PAF|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-property-graph-file = Output property graph (CSV) @|fg(green) text|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-rgfa-file = Output @|fg(green) rGFA|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-sam-file = Output @|fg(green) SAM|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-sample-file = Output @|fg(green) text|@ file of samples, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-sequence-dictionary-file = Output @|fg(green) sequence dictionary|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-sequence-length-file = Output @|fg(green) text|@ file of sequence lengths, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-text-file = Output tab-separated values (TSV) @|fg(green) text|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.
output-vcf-file = Output @|fg(green) VCF|@ file, if any. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression. Default stdout.

// required output file options

output-paired-file = Output paired @|fg(green) interleaved FASTQ|@ file. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression.
output-unpaired-file = Output unpaired @|fg(green) FASTQ|@ file. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression.
output-first-fastq-file = First output @|fg(green) FASTQ|@ file. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression.
output-second-fastq-file = Second output @|fg(green) FASTQ|@ file. Use { .bgz, .bz2, .gz, .xz, .zst } file extension for compression.

// other options

alphabet = @|fg(green) FASTA|@ alphabet, { dna, protein }. // Default dna.
bytes = Split the input file at the next record after each @|fg(yellow) n|@ bytes.
chr = Add @|fg(yellow) \"chr\"|@ to chromosome names.
description = Description line regex pattern to match.
filter = Filter to records that have passed all filters.
fragment-count = Filter by fragment count.
id = Filter by id.
invalid-segment-references = Filter records that reference missing segments.
kmer-count = Filter by k-mer count.
left-pad = Left pad split index in output file name by zeros. // example
length = Filter by length.
line-width = Line width. // Default 70.
mapping-quality = Filter by mapping quality.
maximum-length = Maximum sequence length, exclusive.
minimum-length = Minimum sequence length, inclusive.
mismatch-count = Filter by mismatch count.
name = Exact sequence name to match.
prefix = Output file prefix. // example
probability = Probability a @|fg(green) FASTQ|@ record will be removed, [0.0 - 1.0].
qual = Filter by quality score.
quality = Quality score for @|fg(green0 FASTQ|@ sequences, [0 - 93]. // Default 40.
query = Filter by query range, specify as @|fg(yellow) chrom:start-end|@ in 0-based coordinates.
range = Filter by range, specify as @|fg(yellow) chrom:start-end|@ in 0-based coordinates.
read-count = Filter by read count.
read-group-barcodes = Read group barcodes.
read-group-id = Read group id.
read-group-insert-size = Read group predicted median insert size.
read-group-library = Read group library.
read-group-platform-unit = Read group platform unit.
read-group-sample = Read group sample.
records = Split the input file after each @|fg(yellow) n|@ records.
score = Filter by score.
script = Filter by script, eval against @|fg(yellow) r|@. // example
seed = Random number seed. Default relates to current time.
suffix = Output file suffix. // example
target = Filter by target range, specify as @|fg(yellow) chrom:start-end|@ in 0-based coordinates.
validate = Validate @|fg(green) VCF|@ header lines.

// command descriptions

dsh-bio.compress-bed.usage.description = Compress features in @|fg(green) BED|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-fasta.usage.description = Compress sequences in @|fg(green) FASTA|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-fastq.usage.description = Compress sequences in @|fg(green) FASTQ|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-gaf.usage.description = Compress alignments in @|fg(green) GAF|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-gfa1.usage.description = Compress assembly in @|fg(green) GFA 1.0|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-gfa2.usage.description = Compress assembly in @|fg(green) GFA 2.0|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-gff3.usage.description = Compress features in @|fg(green) GFF3|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-paf.usage.description = Compress alignments in @|fg(green) PAF|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-rgfa.usage.description = Compress assembly in @|fg(green) rGFA|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-sam.usage.description = Compress alignments in @|fg(green) SAM|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.compress-vcf.usage.description = Compress variants and genotypes in @|fg(green) VCF|@ format to splittable bgzf or bzip2 compression codecs.
dsh-bio.create-sequence-dictionary.usage.description = Create a SequenceDictionary from DNA sequences in @|fg(green) FASTA|@ format.
dsh-bio.disinterleave-fastq.usage.description = Convert @|fg(green) interleaved FASTQ|@ format into first and second sequence files in FASTQ format.
dsh-bio.downsample-fastq.usage.description = Downsample sequences from files in @|fg(green) FASTQ|@ format.
dsh-bio.downsample-interleaved-fastq.usage.description = Downsample sequences from a file in @|fg(green) interleaved FASTQ|@ format.
dsh-bio.export-segments.usage.description = Export assembly segment sequences in @|fg(green) GFA 1.0|@ format to FASTA format.
dsh-bio.extract-fasta.usage.description = Extract matching sequences in @|fg(green) FASTA|@ format.
dsh-bio.extract-fastq.usage.description = Extract matching sequences in @|fg(green) FASTQ|@ format.
dsh-bio.extract-fastq-by-length.usage.description = Extract sequences in @|fg(green) FASTQ|@ format with a range of lengths.
dsh-bio.fasta-to-fastq.usage.description = Convert DNA sequences in @|fg(green) FASTA|@ format to FASTQ format.
dsh-bio.fastq-description.usage.description = Output description lines from sequences in @|fg(green) FASTQ|@ format.
dsh-bio.fastq-sequence-length.usage.description = Output sequence lengths from sequences in @|fg(green) FASTQ|@ format.
dsh-bio.fastq-to-bam.usage.description = Convert sequences in @|fg(green) FASTQ|@ format to unaligned BAM format.
dsh-bio.fastq-to-fasta.usage.description = Convert sequences in @|fg(green) FASTQ|@ format to FASTA format.
dsh-bio.fastq-to-text.usage.description = Convert sequences in @|fg(green) FASTQ|@ format to tab-separated values (TSV) text format.
dsh-bio.filter-bed.usage.description = Filter features in @|fg(green) BED|@ format.
dsh-bio.filter-fasta.usage.description = Filter sequences in @|fg(green) FASTA|@ format.
dsh-bio.filter-fastq.usage.descriptino = Filter sequences in @|fg(green) FASTQ|@ format.
dsh-bio.filter-gaf.usage.description = Filter alignments in @|fg(green) GAF|@ format.
dsh-bio.filter-gfa1.usage.description = Filter assembly in @|fg(green) GFA 1.0|@ format.
dsh-bio.filter-gfa2.usage.description = Filter assembly in @|fg(green) GFA 2.0|@ format.
dsh-bio.filter-gff3.usage.description = Filter features in @|fg(green) GFF3|@ format.
dsh-bio.filter-paf.usage.description = Filter alignments in @|fg(green) PAF|@ format.
dsh-bio.filter-rgfa.usage.description = Filter assembly in @|fg(green) rGFA|@ format.
dsh-bio.filter-sam.usage.description = Filter alignments in @|fg(green) SAM|@ format.
dsh-bio.filter-vcf.usage.description = Filter variants in @|fg(green) VCF|@ format.
dsh-bio.gfa1-to-gfa2.usage.description = Convert @|fg(green) GFA 1.0|@ format to GFA 2.0 format.
dsh-bio.identify-gfa1.usage.description = Add identifier annotation to records in @|fg(green) GFA 1.0|@ format.
dsh-bio.interleave-fastq.usage.description = Convert first and second sequence files in @|fg(green) FASTQ|@ format to interleaved FASTQ format.
dsh-bio.interleaved-fastq-to-bam.usage.description = Convert sequences in @|fg(green) interleaved FASTQ|@ format to unaligned BAM format.
dsh-bio.links-to-cytoscape-edges.usage.description = Convert links in @|fg(green) GFA 1.0|@ format to edges.txt format for Cytoscape.
dsh-bio.links-to-property-graph.usage.description = Convert links in @|fg(green) GFA 1.0|@ format to property graph (CSV) text format.
dsh-bio.reassemble-paths.usage.description = Reassemble paths in @|fg(green) GFA 1.0|@ format from traversal records.
dsh-bio.remap-dbsnp.usage.description = Remap DB Type=String flags in @|fg(green) VCF|@ format to DB Type=Flag and dbsnp Type=String fields.
dsh-bio.remap-phase-set.usage.description = Remap PS Type=String phase set ids in @|fg(green) VCF|@ format to PS Type=Integer.
dsh-bio.rename-bed-references.usage.description = Rename references in @|fg(green) BED|@ files.
dsh-bio.rename-gff3-references.usage.description = Rename references in @|fg(green) GFF3|@ files.
dsh-bio.rename-vcf-references.usage.description = Rename references in @|fg(green) VCF|@ files.
dsh-bio.segments-to-cytoscape-nodes.usage.description = Convert segments in @|fg(green) GFA 1.0|@ format to nodes.txt format for Cytoscape.
dsh-bio.segments-to-property-graph.usage.description = Convert segments in @|fg(green) GFA 1.0|@ format to property graph (CSV) text format.
dsh-bio.split-bed.usage.description = Split files in @|fg(green) BED|@ format.
dsh-bio.split-fasta.usage.description = Split files in @|fg(green) FASTA|@ format.
dsh-bio.split-fastq.usage.description = Split files in @|fg(green) FASTQ|@ format.
dsh-bio.split-gaf.usage.description = Split files in @|fg(green) GAF|@ format.
dsh-bio.split-gff3.usage.description = Split files in @|fg(green) GFF3|@ format.
dsh-bio.split-interleaved-fastq.usage.description = Split files in @|fg(green) interleaved FASTQ|@ format.
dsh-bio.split-paf.usage.description = Split files in @|fg(green) PAF|@ format.
dsh-bio.split-sam.usage.description = Split files in @|fg(green) SAM|@ format.
dsh-bio.split-vcf.usage.description = Split files in @|fg(green) VCF|@ format.
dsh-bio.text-to-fastq.usage.description = Convert sequences in tab-separated values (TSV) @|fg(green) text|@ format to FASTQ format.
dsh-bio.traversals-to-cytoscape-edges.usage.description = Convert traversals in @|fg(green) GFA 1.0|@ format to edges.txt format for Cytoscape.
dsh-bio.traversals-to-property-graph.usage.description = Convert traversals in @|fg(green) GFA 1.0|@ format to property graph (CSV) text format.
dsh-bio.traverse-paths.usage.description = Traverse paths in @|fg(green) GFA 1.0|@ format.
dsh-bio.truncate-fasta.usage.description = Truncate sequences in @|fg(green) FASTA|@ format.
dsh-bio.truncate-paths.usage.description = Truncate paths in @|fg(green) GFA 1.0|@ format.
dsh-bio.variant-table-to-vcf.usage.description = Convert Ensembl variant table in @|fg(green) text|@ format to VCF format.
dsh-bio.vcf-header.usage.description = Extract header from @|fg(green) VCF|@ format.
dsh-bio.vcf-pedigree.usage.description = Extract a pedigree from @|fg(green) VCF|@ format.
dsh-bio.vcf-samples.usage.description = Extract samples from @|fg(green) VCF|@ format.
